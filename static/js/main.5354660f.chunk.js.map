{"version":3,"sources":["App.jsx","serviceWorker.js","index.jsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","mainFeaturesPost","position","color","palette","common","white","marginBottom","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","left","right","backgroundOverlay","mainFeaturesPostContent","padding","fontShadow","fontWeight","marginTop","cardMedia","paddingTop","cardContent","cardGrid","footer","App","classes","useState","value","setValue","open","setOpen","handleDialogClose","AppBar","Container","fixed","Toolbar","IconButton","edge","aria-label","className","Typography","variant","Box","mr","Button","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autofocus","margin","label","type","fullWidth","required","DialogActions","Paper","style","backgroundImage","Grid","container","item","md","gutterBottom","paragraph","maxWidth","align","justify","map","card","key","xs","sm","Card","CardMedia","image","CardContent","CardActions","size","BottomNavigation","onChange","event","newValue","BottomNavigationAction","icon","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5354660f.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {\n    AppBar, BottomNavigation, BottomNavigationAction, CardMedia, Button, Paper, Box, Toolbar, Container,\n    IconButton, Typography, Card, Grid, CardContent, CardActions, Dialog, DialogContentText, TextField,\n    DialogTitle, DialogContent, DialogActions\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LayerIcon from \"@material-ui/icons/Layers\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(1)\n    },\n    title: {\n        flexGrow: 1\n    },\n    mainFeaturesPost: {\n        position: \"relative\",\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing(4),\n\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\"\n    },\n    overlay: {\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundOverlay: \"rgba (0,0,0,.3)\"\n    },\n    mainFeaturesPostContent: {\n        position: \"relative\",\n        padding: theme.spacing(6),\n        fontShadow: \"1px 1px 1px black\",\n        fontWeight: \"bold\",\n        marginTop: theme.spacing(8),\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\",\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    cardGrid: {\n        marginTop: theme.spacing(4),\n    },\n    footer: {\n        marginTop: theme.spacing(4),\n    },\n}))\n\nfunction App() {\n    const classes = useStyles()\n    const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    const [value, setValue] = useState(\"recents\")\n    const [open, setOpen] = useState(false)\n    const handleChange = (event, newValue) => setValue(newValue)\n    const handleLogIn = () => setOpen(true)\n    const handleDialogClose = () => setOpen(false)\n\n\n    return (\n        <>\n            <AppBar position=\"fixed\">\n                <Container fixed>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\"\n                                    aria-label=\"menu\" className={classes.menuButton}>\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}> My material-UI </Typography>\n                        <Box mr={3}>\n                            <Button color={\"inherit\"} variant={\"outlined\"} onClick={handleLogIn}> Log in </Button>\n\n                            <Dialog open={open} onClose={handleDialogClose} aria-labelledby={\"Log in form\"}>\n                                <DialogTitle id={\"Log in form\"}> Log in </DialogTitle>\n                                <DialogContent>\n                                    <DialogContentText> Please Log in to view more </DialogContentText>\n                                    <TextField autofocus\n                                               margin={\"dense\"}\n                                               id={\"name\"}\n                                               label={\"E-mail address\"}\n                                               type={\"email\"}\n                                               fullWidth\n                                               required\n                                    />\n                                    <TextField margin={\"dense\"}\n                                               id={\"password\"}\n                                               label={\"Password\"}\n                                               type={\"password\"}\n                                               fullWidth\n                                               required\n                                    />\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={handleDialogClose} color={\"primary\"} > Cancel </Button>\n                                    <Button onClick={handleDialogClose} color={\"primary\"} > Log in </Button>\n                                </DialogActions>\n                            </Dialog>\n\n                        </Box>\n                        <Button color={\"secondary\"} variant={\"contained\"}> Sign Up </Button>\n                    </Toolbar>\n                </Container>\n            </AppBar>\n\n            <main>\n                <Paper className={classes.mainFeaturesPost}\n                       style={{backgroundImage: `url(https://source.unsplash.com/random)`}}>\n                    <Container fixed>\n                        <div className={classes.overlay}/>\n                        <Grid container>\n                            <Grid item md={7}>\n                                <div className={classes.mainFeaturesPostContent}>\n                                    <Typography variant={\"h3\"} color={\"inherit\"} gutterBottom> My awesome Material-UI\n                                        SPA </Typography>\n                                    <Typography variant={\"h5\"} color={\"inherit\"} paragraph>\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In vitae feugiat odio.\n                                        Fusce libero augue, ultrices id mollis sed, dignissim at eros. Maecenas lacinia\n                                        lacus.\n                                    </Typography>\n                                    <Button variant={\"contained\"} color={\"secondary\"}>\n                                        Learn more\n                                    </Button>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                </Paper>\n                <div>\n                    <Container maxWidth={\"md\"}>\n                        <Typography variant={\"h2\"}\n                                    align={\"center\"}\n                                    color={\"textPrimary\"}\n                                    gutterBottom>\n                            Some text\n                        </Typography>\n                        <Typography variant={\"h5\"}\n                                    align={\"justify\"}\n                                    color={\"textSecondary\"}\n                                    paragraph>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. In vitae feugiat odio.\n                            Fusce libero augue, ultrices id mollis sed, dignissim at eros. Maecenas lacinia\n                            lacus. Fusce libero augue, ultrices id mollis sed, dignissim at eros. Maecenas lacinia\n                            lacus.\n                        </Typography>\n                        <div>\n                            <Grid container spacing={2} justify={\"center\"}>\n                                <Grid item>\n                                    <Button variant={\"contained\"} color={\"primary\"}> Start now</Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button variant={\"outlined\"} color={\"primary\"}> Learn more</Button>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Container>\n                </div>\n                <Container className={classes.cardGrid} maxWidth={\"md\"}>\n                    <Grid container spacing={4}>\n                        {cards.map(card => {\n                            return <Grid item key={card} xs={12} sm={6} md={4}>\n                                <Card>\n                                    <CardMedia\n                                        className={classes.cardMedia}\n                                        image={\"https://source.unsplash.com/random\"}\n                                        title={\"Image title\"}\n                                    />\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography variant={\"h5\"} gutterBottom>\n                                            Blog post\n                                        </Typography>\n                                        <Typography>\n                                            Blog post. Blog post. Blog post. Blog post. Blog post.\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size={\"small\"} color={\"primary\"}> View </Button>\n                                        <Button size={\"small\"} color={\"primary\"}> Edit </Button>\n                                        <LayerIcon/>\n                                        <PlayCircleFilledIcon/>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        })}\n                    </Grid>\n                </Container>\n            </main>\n            <footer className={classes.footer}>\n                <Typography variant={\"h5\"} align={\"center\"} gutterBottom> My Footer </Typography>\n                <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n                    <BottomNavigationAction\n                        label={\"Recents\"}\n                        value={\"recents\"}\n                        icon={<RestoreIcon/>}\n                    />\n                    <BottomNavigationAction\n                        label={\"Favorites\"}\n                        value={\"favorites\"}\n                        icon={<FavoriteIcon/>}\n                    />\n                    <BottomNavigationAction\n                        label={\"Nearby\"}\n                        value={\"nearby\"}\n                        icon={<LocationOnIcon/>}\n                    />\n                    <BottomNavigationAction\n                        label={\"Folder\"}\n                        value={\"folder\"}\n                        icon={<FolderIcon/>}\n                    />\n                </BottomNavigation>\n                <Typography align={\"center\"} variant={\"subtitle1\"}\n                            component={\"p\"} color={\"textSecondary\"}>\n                    Arsen Vaskanian, all rights reserved\n                </Typography>\n            </footer>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}